<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /xxILAOkH/f2AAAAAElFTkSuQmCC
</value>
  </data>
</root>